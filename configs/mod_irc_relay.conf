; mod_irc_relay.conf - IRC-IRC relay

[general]
;exposemembers=yes     ; Whether or not to expose IRC channel members from one channel in NAMES, WHO, and WHOIS replies on the other channel. Default is 'yes'.
;startupjoinignore=45  ; Ignore (don't relay) any channel joins within this many seconds of the module loading.
                       ; This can be helpful if you reload the module or restart the BBS and don't
                       ; want to broadcast all the automatic reconnects of IRC clients to other bridged channels (which may be annoying to users).
                       ; Default is 0 (disabled).

; Define one or more channel mappings, each of which provides a 1:1 relay between the specified channels:
; You must set up a mapping for each relay you want to configure.

;[map1] ; The names of sections do not matter (but should be unique)
; client1 and client2 are optional. If omitted, the embedded IRC server will be used as a default.
; These can be mixed and matched, so you can relay between two channels on an external IRC server, an external server and the embedded one, or two channels on the embedded server.
; If client1/client2 are specified, the client must join the corresponding channel specified (e.g. using the autojoin setting in mod_irc_client.conf). Otherwise the relay will not work properly.
; It may be possible to create recursive loops with complex configurations if you are not careful, so please map channels carefully.

; Note that even if [bbs] in mod_irc_client.conf connects to the local IRC server, there is a difference between specifying the client explicitly and omitting it.
; In particular, exposemembers will only work when the client is not specified, as this case is handled differently.

; You SHOULD avoid mappings where the same client/channel combination appears in more than one mapping.
; The configuration parser will accept this, but at runtime, only one of the mappings will be used for
; certain operations, which can lead to strange bugs if you are not aware of this.
; If you aren't trying to relay a channel to multiple places, you should be fine.

; Note that non-IRC service relays (e.g. Slack, Discord) to non-native IRC networks (using this module)
; will only work if the native IRC channel is non-empty.
; An easy way to ensure this is to guard the channel with ChanServ. Otherwise messages that need to
; relay through the IRC network will get dropped, if the channel is empty, since the channel won't exist.

;client1=bbs               ; Name of IRC client section configured in mod_irc_client.conf to use for first channel.
;channel1=#general         ; Name of first IRC channel.
;client2=libera            ; Name of IRC client section configured in mod_irc_client.conf to use for second channel.
;channel2=#general         ; Name of second IRC channel.
;relaysystem=yes           ; Whether to relay anything that isn't a PRIVMSG (e.g. JOIN, PART, QUIT, etc.). Default is yes. You may want to set to 'no' for busy channels.

; The example above would relay all IRC messages between #general on the local BBS and #general on libera.
; The example belows relays messages between #general on the local IRC server and #general on libera.

;[map2]
;channel1=#general
;client2=libera
;channel2=#general
;ircuser=jsmith            ; If configured, will make this a "personal" 1:many relay instead of a "many:many" relay.
                           ; This provides some IRC bouncer-like functionality (to some extent).
                           ; This option is ONLY compatible if one of the channels is on the local IRC server, e.g.
                           ; it will NOT work if both client1 and client2 are defined.
                           ; Only this IRC user will be able to use this relay, and relayed messages will not be prefixed with the IRC username.
                           ; If this user is on IRC but not in a relayed channel, the user will be automatically invited to channels with activity.
                           ; Messages posted from IRC will not be tagged with your username, so they will appear to be coming from you
                           ; (generally, it is appropriate to use a user token with this feature, as opposed to a bot token).
                           ; Access to the channel itself is not inherently restricted, but other users cannot post over the relay (though they can to the IRC side),
                           ; and if other members are present in the channel when a message is posted, they will be kicked.
                           ; If you need to totally restrict access to the IRC channel, you will need to use ChanServ or the appropriate channel modes.
                           ; Additionally, since personal relays don't generally make sense to share between IRC users, it is recommended that
                           ; you use the local channel prefix (&) instead of the network channel prefix (#).
