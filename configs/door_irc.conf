; door_irc.conf - Internet Relay Chat client

[general] ; reserved

; One or more client sections for IRC client users
; Each of these sections roughly corresponds to an "IRC network" that can be used.

; The first section specified is special.
; It is used as the "default" IRC client/network to use when none is specified, for certain system operations.

; NOTE: Section names must not contain spaces.

[bbs] ; the BBS's built-in IRC server
hostname = 127.0.0.1
port = 6667 ; Since this is a loopback connection, it's not necessary to use TLS for security.
tls = no
sasl = yes
autojoin = #general
; You *WILL* need to provide the credentials of *some* user on the BBS to connect to its IRC server.
; You can make a separate "machine" account for the IRC client, you should probably NOT put your sysop credentials here!
;username = sysop
;password = P@ssw0rd

;[libera] ; name of client to pass to door_irc module
; e.g. door:irc:libera,#phreaknet
;hostname = irc.libera.chat
;port = 6697
;tls = yes
;tlsverify = no
;username = jsmith
;password = P@ssw0rd!
;sasl = yes
;autojoin = #phreaknet
;logfile = no ; Whether to log all client I/O to a log file.
;callbacks = yes ; Whether to invoke any registered message callbacks for messages received by this client.
                 ; This must be enabled if you are using this client with mod_relay_irc.
				 ; Default is 'yes', but if you don't need this, you can disable this for a slight performance improvement.
;msgscript = /var/lib/lbbs/scripts/ircbot.php ; executable (chmod +x) script to invoke as a callback on sent messages.
                                              ; Invoked as <script> <0=from BBS,1=from IRC> <channel name> <sender name> <message sent>
                                              ; If script exits with 0 return code, STDOOUT will be relayed on. The first word should
                                              ; be the channel or user to which to send the remainder of the output (the message).
                                              ; e.g. echo $argv[2] . " " . "Hello world"; would reply to any PRIVMSG with "Hello world"
                                              ; script can be any script or binary that accepts arguments and prints to STDOUT.
                                              ; Don't forget: this script must be executable by the user under which the BBS is running!!!
