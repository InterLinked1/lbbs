; mod_irc_client.conf - Internet Relay Chat client

[general] ; reserved

; One or more client sections for IRC client users
; Each of these sections roughly corresponds to an "IRC network" that can be used.

; The first section specified is special.
; It is used as the "default" IRC client/network to use when none is specified, for certain system operations.

; NOTE: Section names must not contain spaces.

[bbs] ; the BBS's built-in IRC server. If you want to define a client for users to connect to the local BBS IRC server, you probably don't, see the NOTE below.
hostname = 127.0.0.1
port = 6667 ; Since this is a loopback connection, it's not necessary to use TLS for security.
tls = no
sasl = yes
autojoin = #general
; You *WILL* need to provide the credentials of *some* user on the BBS to connect to its IRC server, if using this mechanism.
; You can make a separate "machine" account for the IRC client, you should probably NOT put your sysop credentials here!
;username = sysop
;password = P@ssw0rd

; *** NOTE ***
; door_irc now supports the ability to dynamically specify an IRC connection string, instead of a client name from mod_irc_client.conf.
; Thus, in menus.conf, instead of doing:
;    C = door:irc:bbs,#general|#general
; Do:
;    C = door:irc:irc://${BBS_USERNAME}:*@127.0.0.1:6667,#general|#general|minpriv=1
; This would make a connection to the local BBS server for the currently logged in user, to the #general channel.
; The * indicates that the currently logged in user is authorized for login to the IRC server without being
; reprompted for the password. Internally, this will cause a one-time token to be generated and sent as the password.
; Protocol, hostname, and a channel to join are mandatory, but the username, password, and port number are optional.
; If you are connecting to the local BBS server (127.0.0.1), feel free to use irc:// instead of ircs:// since
; TLS is not strictly necessary for secure connections to localhost. The connection will be secure either way.
; However, keep in mind the user will not get a +z user mode if irc:// is used and will not be able to join
; channels with the +S mode set. For this reason, you may want to use ircs:// anyways if your server has a certificate.
; Additionally, SASL is used with ircs:// for authentication but NOT with irc://.
;
; Note that there are a few caveats with using this mechanism to keep in mind:
; 1) Yes, irc:irc looks weird but that is the right syntax. Use irc:// for plain text and ircs:// for TLS.
; 2) Note that this will result in a *SECOND* node connection being used.
;    The 1st connection is the user's terminal session, and the 2nd one is door_irc running an IRC client
;    that connects to the IRC server as that user. Thus, users will appear logged into the BBS twice and occupy 2 nodes for the IRC session duration.
;    In the future, it may be possible to do this in the same node, but the current architecture of net_irc does not currently make this feasible.
; 3) If you specify * as the password, a temporary token is generated and used as the password, since the
;    IRC server needs to be able to authenticate the connecting user. This is done for convenience, as the
;    alternative would be requiring the user to re-enter his/her password when the IRC client starts (and this
;    is the fallback behavior if you do not specify a password at all, since there is no other way for the
;    connection to authenticate). If you accidentally specify a different
;    server here, the temporary token is unlikely to be usable since temporary tokens are only accepted
;    on loopback connections (from localhost). However, if you allow users to authenticate to the BBS
;    from localhost (e.g. using net_unix behind OpenSSH), this can present a security risk as this temporary
;    token could be used to gain access to somebody's account for the duration while that token is valid.
;    TL;DR - be sure to double check the connection string as * will generate a valid temporary token
;    and send that as the password, and there is no checking to ensure that this token is only sent to
;    the BBS's IRC server!
; 4) You probably want minpriv=1, since only registered users will be able to (relatively) seamlessly connect this way.
;    This is because for guests, ${BBS_USERNAME} will not resolve to a registered user that the IRC server will accept.


;[libera] ; name of client to pass to mod_irc_client module
; e.g. door:irc:libera,#phreaknet
;hostname = irc.libera.chat
;port = 6697
;tls = yes
;tlsverify = no
;username = jsmith
;password = P@ssw0rd!
;sasl = yes
;autojoin = #phreaknet
;logfile = no ; Whether to log all client I/O to a log file.
;callbacks = yes ; Whether to invoke any registered message callbacks for messages received by this client.
                 ; This must be enabled if you are using this client with mod_irc_relay.
				 ; Default is 'yes', but if you don't need this, you can disable this for a slight performance improvement.
;msgscript = /var/lib/lbbs/scripts/ircbot.php ; executable (chmod +x) script to invoke as a callback on sent messages.
                                              ; Invoked as <script> <0=from BBS,1=from IRC> <channel name> <sender name> <message sent>
                                              ; If script exits with 0 return code, STDOOUT will be relayed on. The first word should
                                              ; be the channel or user to which to send the remainder of the output (the message).
                                              ; e.g. echo $argv[2] . " " . "Hello world"; would reply to any PRIVMSG with "Hello world"
                                              ; script can be any script or binary that accepts arguments and prints to STDOUT.
                                              ; This script only executes for messages received from this client, not messages relayed to it.
                                              ; (To enable the bot in a local network IRC channel, you need to have a client user configured
                                              ; to be in that channel directly.)
                                              ; Don't forget: this script must be executable by the user under which the BBS is running!!!