; mod_discord.conf - Discord/IRC relay functionality

; This module provides native relay integration between the embedded IRC server and an external Discord guild (server),
; allowing messages sent and receive on IRC to appear in Discord, and vice versa.
; This module depends on net_irc as well as libdiscord (Concord C library)

; For instructions on how to create a Discord bot, see: https://discordpy.readthedocs.io/en/stable/discord.html

;[discord]
;*** You must specify either the token directly, or the path to a JSON config file containing the token - see https://github.com/Cogmasters/concord/blob/master/config.json
;token=ABc78Effhiurg3Df893tdgf9.OIosfu.E8rgyosghggiO_88efdifjdw8e ; Your Discord token from https://discord.com/developers/applications (this is a sample one, same format)
;concordconfig=/etc/concord/config.json ; Path of config.json for concord if you have one. Optional, if you specify the token in this config file.
                                        ; Some settings can only be provided to concord through the config file.
										; If a concord config file is provided, the token field here will be ignored (you must specify it in the concord config file).
;exposemembers=yes ; Whether or not to expose Discord channel members in NAMES, WHO, and WHOIS replies on IRC. Default is 'yes'.
;echochannel=912345678907654321,test    ; Comma-separated guild ID, channel name, used for testing liveness.
                                        ; The guild must have at least one relay channel, but the channel does not have to be configured for a relay,
                                        ; and since the channel will be posted to automatically, it should be dedicated exclusively to this testing.
                                        ; This is a workaround for a KNOWN BUG. libdiscord periodically will fail to receive messages *from* Discord,
                                        ; but messages from IRC can still be relayed to Discord.
                                        ; To detect this, you can configure the module to periodically send test messages to a test channel.
                                        ; If the module fails to receive an echo of the test post, it will conclude something has broken
                                        ; and automatically reload the module, minimizing relay downtime.
                                        ; This option may be removed in the future if the bug this works around is fixed.

; Define one or more channel mappings, each of which provides a 1:1 relay between the specified channels:
; You must set up a mapping for reach relay you want to configure.

;[map1] ; The names of sections do not matter (but should be unique)
;discord_guild=912345678907654321 ; Server guild. See https://support.discord.com/hc/en-us/articles/206346498-Where-can-I-find-my-User-Server-Message-ID-
;discord_channel=general ; Name of Discord channel. Do NOT include a leading #
;webhook_id=1234567890123456789 ; If you configure a webhook for this Discord channel, messages can be posted using a custom username, rather than the name of the bot.
                                ; You can get the ID and token from the webhook URL - for more details, see: https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks
;webhook_token=Abcd1deFghiJK2kkLM98sDUSFdf7RSiffg45tufgh9s87fgusq2p8eudhf9q873SOIGg ; webhook token
;irc_channel=#bbs-general  ; Name of IRC channel. Do include the leading # (or &, or whatever prefix)
;relaysystem=yes           ; Whether to relay anything that isn't a PRIVMSG (e.g. JOINs, PARTs, QUITs, etc.). Default is yes. You may want to set to 'no' for busy channels.
;multiline=allow           ; Whether to allow, tolerate, or drop Discord messages that contain multiple lines from being relayed to IRC.
                           ; This is useful if your IRC users are frequently annoyed by large, multiline messages from Discord that spam an IRC channel with lots of messages,
						   ; since IRC has no support for multiline messages and each message must therefore be relayed line by line.
						   ; Valid settings are:
						   ; allow = Allow all multiline messages. This is the default.
						   ; warn = Relay messages, but warn sender against this.
						   ; drop = Drop messages (don't relay), and notify sender of this.

;[map2] ; Another channel mapping
;discord_guild=912345678907654321
;discord_channel=help
;irc_channel=#bbs-help
